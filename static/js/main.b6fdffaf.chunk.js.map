{"version":3,"sources":["components/Person.js","components/Paginator.js","App.js","index.js"],"names":["Person","props","data","name","height","mass","hair_color","skin_color","birth_year","gender","films","useState","showFilms","setDisplayFilms","filmsData","filmsLoaded","setFilmsLoaded","useEffect","forEach","f","axios","get","then","push","title","length","Card","className","CardBody","CardTitle","Button","color","onClick","map","key","Paginator","page","count","currentPage","setPage","totalPages","Math","ceil","items","handlePage","num","document","getElementById","scrollIntoView","Item","curr","i","PaginationItem","active","PaginationLink","Pagination","aria-label","previous","disabled","next","App","setData","url","console","log","results","p","Spinner","type","style","width","margin","ReactDOM","render"],"mappings":"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","file":"static/js/main.b6fdffaf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardBody, CardTitle, Button } from \"reactstrap\";\nimport \"./Person.scss\";\n\nfunction Person(props) {\n  const {\n    name,\n    height,\n    mass,\n    hair_color,\n    skin_color,\n    birth_year,\n    gender,\n    films\n  } = props.data;\n\n  const [showFilms, setDisplayFilms] = useState(false);\n  // eslint-disable-next-line\n  const [filmsData, _] = useState([]);\n  const [filmsLoaded, setFilmsLoaded] = useState(false);\n\n  useEffect(() => {\n    if (showFilms) {\n      films.forEach(f => {\n        axios.get(f).then(({ data }) => {\n          filmsData.push(data.title);\n          if (filmsData.length === films.length) {\n            setFilmsLoaded(true);\n          }\n        });\n      });\n    }\n    // eslint-disable-next-line\n  }, [showFilms]);\n\n  return (\n    <Card className=\"person\">\n      <CardBody>\n        <CardTitle>{name}</CardTitle>\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                <td>Height:</td>\n                <td>{height}cm</td>\n              </tr>\n              <tr>\n                <td>Mass:</td>\n                <td>{mass}kg</td>\n              </tr>\n              <tr>\n                <td>Hair:</td>\n                <td>{hair_color}</td>\n              </tr>\n              <tr>\n                <td>Skin:</td>\n                <td>{skin_color}</td>\n              </tr>\n              <tr>\n                <td>Birth Year:</td>\n                <td>{birth_year}</td>\n              </tr>\n              <tr>\n                <td>Gender:</td>\n                <td>{gender}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        {!showFilms && (\n          <Button color=\"info\" onClick={() => setDisplayFilms(true)}>\n            List {films.length} Films\n          </Button>\n        )}\n        {filmsLoaded && (\n          <div>\n            <h4>Appears in</h4>\n            <ul>\n              {filmsData.map(title => (\n                <li key={title}>{title}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default Person;\n","import React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport \"./Paginator.scss\";\n\nfunction Paginator(props) {\n  const { page, count } = props;\n  const [currentPage, setPage] = page;\n  const totalPages = Math.ceil(count / 10);\n  const items = [];\n\n  function handlePage(num) {\n    document.getElementById(\"root\").scrollIntoView();\n    setPage(num);\n  }\n\n  const Item = (curr, i) => (\n    <PaginationItem key={i} active={curr === i}>\n      <PaginationLink onClick={() => handlePage(i)}>{i}</PaginationLink>\n    </PaginationItem>\n  );\n\n  if (totalPages - currentPage >= 3) {\n    if (currentPage < 4) {\n      for (let i = 1; i <= 5; i++) {\n        items.push(Item(currentPage, i));\n      }\n    } else {\n      for (let i = currentPage - 2; i < currentPage + 3; i++) {\n        items.push(Item(currentPage, i));\n      }\n    }\n  } else {\n    for (let i = totalPages - 4; i <= totalPages; i++) {\n      items.push(Item(currentPage, i));\n    }\n  }\n\n  return (\n    <Pagination className=\"pagination\" aria-label=\"Page navigation example\">\n      <PaginationItem>\n        <PaginationLink\n          previous\n          onClick={() => handlePage(currentPage - 1)}\n          disabled={currentPage === 1}\n        />\n      </PaginationItem>\n      {items}\n      <PaginationItem>\n        <PaginationLink\n          next\n          onClick={() => handlePage(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        />\n      </PaginationItem>\n    </Pagination>\n  );\n}\n\nexport default Paginator;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Person from \"./components/Person\";\nimport Paginator from \"./components/Paginator\";\nimport { Spinner } from \"reactstrap\";\nimport \"./App.scss\";\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  const [currentPage, setPage] = useState(1);\n  const [data, setData] = useState({});\n\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  useEffect(() => {\n    const url = `https://swapi.co/api/people/?page=${currentPage}&format=json`;\n    axios.get(url).then(({ data }) => {\n      console.log(data);\n      setData(data);\n    });\n  }, [currentPage]);\n\n  return (\n    <main>\n      <h1 className=\"Header\">React Wars</h1>\n      <div className=\"people\">\n        {data.results ? (\n          data.results.map(p => <Person key={p.url} data={p} />)\n        ) : (\n          <>\n            <div></div>\n            <Spinner\n              type=\"grow\"\n              style={{\n                color: \"#fff\",\n                width: \"3rem\",\n                height: \"3rem\",\n                margin: \"3rem auto\"\n              }}\n            />\n          </>\n        )}\n      </div>\n      <Paginator count={data.count} page={[currentPage, setPage]} />\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}